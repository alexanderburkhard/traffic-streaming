services:
  broker-1:
    image: apache/kafka:latest
    hostname: broker-1
    container_name: broker-1
    ports:
      - 9092:9092
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_BROKER_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://broker-1:9092,CONTROLLER://broker-1:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-1:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker-1:9093
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs

  # akhq:
  #   image: tchiotludo/akhq
  #   container_name: akhq
  #   ports:
  #     - "8080:8080"
  #   environment:
  #     AKHQ_CONFIGURATION: |
  #       akhq:
  #         server:
  #           access-log: true
  #         connections:
  #           kafka-cluster:
  #             properties:
  #               bootstrap.servers: "broker-1:9092"
  #   depends_on:
  #     - broker-1


  data-producer:
    build: 
      context: ./data-producer
      dockerfile: ./Dockerfile
    container_name: data-producer
    depends_on:
       - broker-1
       - spark
    volumes:
      - ./data-producer/csv_files:/csv_files

  spark:
    build: 
      context: ./data-processor
      dockerfile: ./Dockerfile
    environment:
      - SPARK_MASTER=spark://spark:7077
      - SPARK_LOCAL_IP=spark
    ports:
      - "4040:4040"
    # volumes:
    #   - .:/app
    #command: ["spark-submit", "--master", "local[*]", "/app/spark-streaming-app.py"]

  # postgresql:
  #   image: postgres:15
  #   container_name: postgres_db
  #   restart: always
  #   environment:
  #     POSTGRES_USER: sparkuser
  #     POSTGRES_PASSWORD: sparkpass
  #     POSTGRES_DB: traffic_db
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - pg_data:/var/lib/postgresql/data

volumes:
  pg_data:

